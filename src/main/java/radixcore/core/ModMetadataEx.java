package radixcore.core;

import java.lang.reflect.Method;
import java.util.Map;

import net.minecraft.entity.player.EntityPlayer;
import net.minecraftforge.fml.common.ModMetadata;
import radixcore.data.AbstractPlayerData;
import radixcore.data.IWatchable;
import radixcore.update.IUpdateProtocol;
import radixcore.util.RadixExcept;

public class ModMetadataEx extends ModMetadata
{
	public Map<String, AbstractPlayerData> playerDataMap;
	public Class classContainingClientDataContainer;
	public Class classContainingGetPlayerDataMethod;
	public Class<? extends IUpdateProtocol> updateProtocolClass;
	public String curseId;
	
	public static ModMetadataEx getFromModMetadata(ModMetadata modData)
	{
		ModMetadataEx exData = new ModMetadataEx();
		
		exData.authorList 	 = modData.authorList;
		exData.autogenerated = modData.autogenerated;
		exData.childMods 	 = modData.childMods;
		exData.credits 		 = modData.credits;
		exData.dependants 	 = modData.dependants;
		exData.dependencies  = modData.dependencies;
		exData.description 	 = modData.description;
		exData.logoFile 	 = modData.logoFile;
		exData.modId 		 = modData.modId;
		exData.name 		 = modData.name;
		exData.parent 		 = modData.parent;
		exData.parentMod 	 = modData.parentMod;
		exData.requiredMods  = modData.requiredMods;
		exData.screenshots 	 = modData.screenshots;
		exData.updateUrl 	 = modData.updateUrl;
		exData.url 			 = modData.url;
		exData.version 		 = modData.version;
		
		return exData;
	}
	
	public IWatchable getPlayerData(EntityPlayer player)
	{
		IWatchable watchable = null;
		Method method;
		
		try
		{
			method = classContainingGetPlayerDataMethod.getMethod("getPlayerData", EntityPlayer.class);
			watchable = (IWatchable) method.invoke(null, player);
		}
		
		catch (Exception e)
		{
			RadixExcept.logErrorCatch(e, "Unable to find getPlayerData method in provided class: " + classContainingGetPlayerDataMethod.getSimpleName());
		}
		
		return watchable;
	}
}
